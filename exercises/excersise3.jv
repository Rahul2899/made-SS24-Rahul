pipeline TransportPipeline {

    // Define the data processing sequence
    TransportDataExtractor
    -> DataInterpreter
    -> CSVDataInterpreter
    -> ScrapeMetaData
    -> AssignNameToColumnSet1
    -> AssignNameToColumnSet2
    -> DataStructure
    -> SaveToDB;

    // Extracts data from the specified URL
    block TransportDataExtractor oftype HttpExtractor {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }

    // Interprets the extracted text file with specified encoding
    block DataInterpreter oftype TextFileInterpreter {
        encoding: "latin4";
    }

    // Interprets the CSV data with specified delimiter and enclosing escape character
    block CSVDataInterpreter oftype CSVInterpreter {
        delimiter: ";";
        enclosingEscape: '"';
    }

    // Deletes metadata rows and footer rows to clean up the data
    block ScrapeMetaData oftype RowDeleter {
        delete: [row 1, row 2, row 3, row 4, row 5, row 6, row 7, row 41337, row 41338, row 41339];
    }

    // Sets headers for the first set of columns (A-E)
    block AssignNameToColumnSet1 oftype CellWriter {
        at: range A1:E1;
        write: ['year', 'month', 'goods_id', 'goods_name', 'goods_source'];
    }

    // Sets headers for the second set of columns (AT-AU)
    block AssignNameToColumnSet2 oftype CellWriter {
        at: range AT1:AU1;
        write: ['abroad', 'total'];
    }

    // Defines the data structure and column types
    block DataStructure oftype TableInterpreter {
        header: true;
        columns: [
            "year" oftype positive,
            "month" oftype GermanMonth,
            "goods_id" oftype GoodIds,
            "goods_name" oftype text,
            "goods_source" oftype text,
            "abroad" oftype positive,
            "total" oftype positive
        ];
    }

    // Loads the processed data into a SQLite database
    block SaveToDB oftype SQLiteLoader {
        table: "goods";
        file: "./goodsTransportedByTrain.sqlite";
    }
}

// Define value type for positive integers with constraints
valuetype positive oftype integer {
    constraints: [PositiveValues];
}

// Constraint to ensure values are positive
constraint PositiveValues on integer {
    value >= 0;
}

// Define value type for German months with constraints
valuetype GermanMonth oftype text {
    constraints: [CapitaliseGermanMonth];
}

// Constraint to ensure months are capitalized German month names
constraint CapitaliseGermanMonth oftype RegexConstraint {
    regex: /\b(Januar|Februar|MÃ¤rz|April|Mai|Juni|Juli|August|September|Oktober|November|Dezember)\b/;
}

// Define value type for goods_id with constraints
valuetype GoodIds oftype text {
    constraints: [StartWithCode];
}

// Constraint to ensure goods_id starts with 'NST7-' followed by three alphanumeric characters
constraint StartWithCode oftype RegexConstraint {
    regex: /^NST7-[0-9A-Z]{3}/;
}
