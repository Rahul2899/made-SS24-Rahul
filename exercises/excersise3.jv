// Exercise 3: Automated Data Pipeline for Train Goods Transportation

pipeline TransportPipeline {

    // 1. Extract data from the CSV file directly
    CsvHttpExtractor
        -> CsvSkipHeaderLinesInterpreter
        -> CsvColumnSelector
        -> ColumnRenamer
        -> DataCleaningInterpreter
        -> SQLiteLoader;

    block CsvHttpExtractor oftype HttpExtractor {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }

    block CsvSkipHeaderLinesInterpreter oftype CsvInterpreter {
        delimiter: ";";
        header: true;
        skip_header_lines: 8; // Skip the initial 8 lines of metadata
        skip_footer_lines: 3; // Skip the last 3 lines of copyright notice
    }
    
    //2. Selects the relevant columns as per the problem statement.
    block CsvColumnSelector oftype ColumnSelector {
        columns: [
            column A,
            column B,
            column C,
            column D,
            column E,
            column AT,
            column AU,
        ];
    }

    //3. Renames the columns as per the problem statement.
    block ColumnRenamer oftype ColumnRenamer {
        rename: {
            A: "year",
            B: "month",
            C: "goods_id",
            D: "goods_name",
            E: "goods_source",
            AT: "abroad",
            AU: "total"
        };
    }

    //4. Data Cleaning and Validation Block
    block DataCleaningInterpreter oftype TableInterpreter {
        columns: [
            "year"    oftype PositiveInteger,
            "month"   oftype GermanMonth,
            "goods_id" oftype GoodsId,
            "goods_name" oftype text,
            "goods_source" oftype text,
            "abroad"    oftype PositiveInteger,
            "total"     oftype PositiveInteger
        ];
        // Drop rows with invalid or missing values in any column
        drop_if_invalid: true;
    }

    block SQLiteLoader oftype SQLiteLoader {
        file: "./goodsTransportedByTrain.sqlite";
        table: "goods";
    }

    //Custom valuetypes for better data integrity
    valuetype PositiveInteger oftype integer {
        constraints: [is_positive];
    }
   
    valuetype GermanMonth oftype text {
        constraints: [
            matches_regex:  "^(Januar|Februar|MÃ¤rz|April|Mai|Juni|Juli|August|September|Oktober|November|Dezember)$"
        ];
    }
   
    valuetype GoodsId oftype text {
        constraints: [
            matches_regex: "^NST7-[0-9A-Z]{3}$"
        ];
    }
}
