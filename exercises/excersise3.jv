pipeline GoodsTransportedByTrainPipeline {
    // Direct link to the CSV file
    GoodsHttpExtractor
        -> GoodsTextFileInterpreter
        -> GoodsCSVInterpreter
        -> GoodsMetadataRemover
        -> GoodsColumnSelector
        -> GoodsHeaderRenamer
        -> GoodsValidator
        -> GoodsSQLiteLoader;

    // Define the blocks used in the pipeline.
    block GoodsHttpExtractor oftype HttpExtractor {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }

    block GoodsTextFileInterpreter oftype TextFileInterpreter {
        encoding: "UTF-8"; // Ensure German umlauts are correctly interpreted
    }

    block GoodsCSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    // Remove metadata rows (initial description and headers, and footer copyright notice)
    block GoodsMetadataRemover oftype MetadataRemover {
        start_row: 9;
    }

    // Select only specific columns: A-E and AT-AU
    block GoodsColumnSelector oftype ColumnSelector {
        keep: ["A", "B", "C", "D", "E", "AT", "AU"];
    }

    // Rename headers for columns A-E and AT-AU
    block GoodsHeaderRenamer oftype HeaderRenamer {
        rename: {
            "A": "year",
            "B": "month",
            "C": "goods_id",
            "D": "goods_name",
            "E": "goods_source",
            "AT": "abroad",
            "AU": "total"
        };
    }

    // Validate the data
    block GoodsValidator oftype DataValidator {
        rules: [
            // Numeric values must be positive integers
            { column: "year", type: integer, constraints: [Positive] },
            { column: "month", type: ValidMonth },
            { column: "goods_id", type: ValidGoodsID },
            { column: "abroad", type: integer, constraints: [Positive] },
            { column: "total", type: integer, constraints: [Positive] }
        ];
    }

    block GoodsSQLiteLoader oftype SQLiteLoader {
        table: "goods";
        file: "goodsTransportedByTrain.sqlite"; // Ensure the correct path
    }
}

// Define custom value types and constraints
valuetype ValidMonth oftype text {
    constraints: [OnlyGermanMonths];
}

valuetype ValidGoodsID oftype text {
    constraints: [OnlyValidGoodsID];
}

// Constraint for German months
constraint OnlyGermanMonths on text {
    value in ["Januar", "Februar", "MÃ¤rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"];
}

// Constraint for valid goods ID
constraint OnlyValidGoodsID on text {
    value matches /^NST7-[A-Z0-9]{3}$/;
}

// Positive integer constraint
constraint Positive on integer {
    value > 0;
}
